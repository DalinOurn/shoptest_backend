pipeline {
    agent any
    environment {
        registry = "dalinourn/shoptest_backend"
        registryCredential = 'docker_id'
        TELEGRAM_TOKEN=credentials('TOKEN')
        CHAT_ID = credentials('secret_text')
        dockerImage = ''
    }

    stages {

        stage('git clone frontend') {
            steps {
                git 'https://github.com/DalinOurn/shoptest_backend.git'

            }
        }

        stage('Build') {
            steps {
                sh 'npm install '
            }
        }

        stage('Building image') {
            steps{
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }

        stage('Deploy Image') {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('docker stop container') {
        steps {
            sh 'docker ps -f name=backendContainer -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=backendContainer -q | xargs -r docker container rm'
        }
    }

        stage('Docker Run') {
            steps{
                script {
                    dockerImage.run("-p 3001:3001 --rm --name backendContainer")
                }
            }
        }
    }

    post{
    success{

        sh ''' 
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode="HTML" -d text="<b>Stage</b> : JENKINS Build \n<b>Status</b> : <i>Success</i> \n<b>Version</b>: ${BUILD_NUMBER} <b> \nWebsite </b> : Shopreview Backend"
        '''
    }
    failure{
        sh ''' 
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode="HTML" -d text="<b>Stage</b> : JENKINS Build \n<b>Status</b> : <i>Failed</i> \n<b>Version</b>: ${BUILD_NUMBER} <b> \nWebsite </b> : Shopreview Backend"
        '''
    }
    }
}